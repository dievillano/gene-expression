---
execute:
  include: false
---

# Methods {#sec-methods}

## Experimental design and data {#sec-data}

```{r}
labels <- c(
  "S1, S2, S3", "S4, S5, S6", "S7, S8, S9", "S10, S11, S12", "S13, S14, S15",
  "S16, S17, S18", "S19, S20, S21", "S22, S23, S24", "S25, S26, S27", 
  "S28, S29, S30"
)
conditions <- c("Y_30", "Y", "YC", "YE", "YCE")
strains <- c("WT", "FL")

label_matrix <- matrix(
  labels, nrow = 2, byrow = TRUE, dimnames = list(strains, conditions)
)

df <- tibble::as_tibble(label_matrix, rownames = "strain")
```

```{r}
library(gt)
```

```{r}
#| include: true
#| echo: false
#| label: tbl-01
#| tbl-cap: "Overview of the experimental design showing the combinations of temperature and growth media (environmental conditions) used to grow cells of the WT and FLC1Δ (FL) strains. Each cell lists the replicate sample labels (S1–S30) corresponding to each unique experimental condition."
df |>
  gt() |>
  tab_spanner(label = md("**37°C**"), columns = c("Y", "YC", "YE", "YCE")) |>
  tab_spanner(label = md("**30°C**"), columns = "Y_30") |>
  tab_spanner(label = md("**Enviromental conditions**"), columns = -strain) |>
  cols_label(
    strain = md("**Strain**"),
    Y_30 = md("**Y**"),
    Y = md("**Y**"),
    YC = md("**YC**"),
    YE = md("**YE**"),
    YCE = md("**YCE**")
  ) |> 
  cols_align(align = "center") |> 
  tab_options(table.font.size = 10, table.width = "80%", table.align = "center")
```

```{r}
counts_raw <- readr::read_delim(
  "data/GSE292021_counts_quantseq_CryptoRNAseqFLC1.txt", delim = "\t",
  col_types = paste0(c("ciiici", rep("i", 30)), collapse = "")
)
colnames(counts_raw)[1:6] <- c(
  "gene_id", "chr", "start", "end", "strand", "length"
)
```

The study involved culturing cells from both the wild-type (WT, FLC1 gene present) and FLC1Δ (FL, FLC1 gene absent) strains under various environmental conditions. Cells were grown in four different growth medium: YPD (Y), YPD with CFW (YC), YPD with EGTA (YE), and YPD with both CFW and EGTA (YCE), all at 37°C to induce stress. Additionally, both strains were grown under baseline conditions in standard YPD at 30°C. In total, 10 distinct experimental conditions were tested (5 environmental conditions × 2 strains), each with 3 biological replicates, resulting in 30 samples. 

@tbl-01 presents the experimental design along with the sample labels for each condition. The 10 experimental conditions are labeled by combining the levels of the three experimental factors: strain, temperature, and growth media, in that order. For example, the condition involving the wild-type strain grown in YCE medium at 37°C is labeled WT-37-YCE, while the corresponding condition for the FLC1Δ strain is labeled FL-37-YCE.

The primary output of the experiment was a raw count matrix containing RNA abundance measurements for `r dim(counts_raw)[1]` genes across 30 samples, resulting in a `r dim(counts_raw)[1]` × 30 matrix. Each entry in the matrix represents the number of sequencing reads mapped to a specific gene in a given sample. 

## Pre-filtering {#sec-filter}

Genes with consistently low or zero counts across samples are unlikely to be biologically active and are typically excluded before DE analysis. This pre-filtering step is justified because genes must surpass a minimal expression threshold to produce functional proteins or exert biological effects [@chen2016from], and low counts often reflect sampling noise rather than true signal [@sha2015effect].

Filtering also improves statistical power. Since DE analysis tests each gene for expression differences between conditions, it involves multiple hypothesis testing, typically corrected via FDR adjustment. These corrections reduce power, especially when many genes are tested but few are truly DE [@bourgon2010independent]. Removing low-expression genes reduces the number of tests, making FDR correction less stringent and increasing the likelihood of detecting true positives [@bourgon2010independent; @sha2015effect].

Although the software used for differential expression (DE) analysis includes an internal filtering routine (see @sec-de), additional pre-filtering was applied using an empirical method implemented in the R package `edgeR` [@chen2025edgeR], as described in @chen2016from. This method retains genes whose counts-per-million (CPM) exceed a specified threshold $k$ in at least $n$ samples. The CPM for each gene in a sample is calculated by dividing the raw read count by the total number of reads (i.e., the library size) in that sample and scaling by one million.

To determine the CPM threshold $k$, the user specifies a minimum raw count that a gene must meet in $n$ samples, and the software computes the corresponding CPM based on the smallest library size. For this study, we required a minimum count of 10 in at least 3 samples, corresponding to the number of replicates per condition. The original, unfiltered count matrix was retained to replicate the DE analysis and compare results.

## Normalisation and transformation {#sec-norm}

In RNA-seq experiments, raw read counts are influenced by both gene expression and technical factors, such as library size, gene length, and GC content, making them not directly comparable across samples or genes [@gierlinski2015statistical; @dillies2012a]. Between-sample variation, mainly due to differences in library size, is commonly corrected using normalisation methods.

While total count normalisation (e.g., CPM) adjusts for library size, it can be biased by a few highly expressed genes, potentially distorting the expression estimates of others and introducing artefactual differences [@gierlinski2015statistical]. More robust approaches like TMM have been proposed [@robinson2010scaling]. In this study, we used the `DESeq2` median-of-ratios method to estimate sample-specific size factors [@anders2010differential; @love2014moderated], and CPM was also applied for comparison. Within-sample normalisation (e.g., for gene length or GC content) was not performed, following the project advisor's recommendation.

RNA-seq data visualisation and multivariate analyses like clustering or PCA are sensitive to heteroskedasticity, where genes with higher expression tend to show greater variance. This can allow highly expressed genes to dominate the analysis and obscure biological signals [@love2014moderated]. Variance-stabilising transformations (VSTs) are often used to place genes on a comparable scale [@hafemeister2019normalization].

Log transformation is a common approach but tends to exaggerate variability in low-count genes, where noise can dominate [@love2014moderated]. In this study, we applied the regularised log (rlog) and VST methods implemented in `DESeq2` [@love2014moderated; @anders2010differential], both applied after `DESeq2` normalisation. For comparison, we also used a base-2 log transformation on CPM-normalised counts, with a prior count of 2 to avoid undefined values.

Transformations were assessed using mean–SD plots for gene-wise variance and boxplots of sample expression profiles to evaluate the extent of variance stabilisation.

## Exploratory analysis {#seq-eda}

An important early step in RNA-seq analysis is assessing the quality and consistency of biological replicates. Ideally, replicates under the same condition should show similar expression profiles after normalisation and transformation. To evaluate this, we used principal component analysis (PCA) to project samples into a lower-dimensional space and examine whether replicates cluster together. PCA decomposes the expression matrix into uncorrelated components ordered by the variance they explain, offering a visual summary of sample similarity. We applied Horn’s parallel analysis to determine how many components to retain, comparing observed eigenvalues to those from randomly generated data and keeping components that exceeded the simulated average [@dinno2009exploring]. This analysis was performed on three transformed datasets: log-transformed CPM, rlog-transformed counts, and VST-transformed counts, as described in @sec-norm.

To visualise sample structure and identify genes contributing to variation, we generated PCA biplots showing the samples along with the five genes most strongly correlated with each principal component, based on their loadings. Loading plots displaying the top 10 of genes by absolute loading value were also produced. To explore the relationship between experimental conditions and the principal components, we conducted ANOVA tests on the component scores, using each experimental factor as a grouping variable. All PCA analyses were performed using the top 10% most variable genes, which are more likely to reflect meaningful biological signals, while low-variance genes were excluded as typically uninformative.

## Differential expression analysis {#sec-de}

The DE analysis approach used in this study follows the methodology implemented in the `DESeq2` package. The core idea is to model the raw counts for each gene using a negative binomial (NB) distribution, where the logarithm of the normalised mean is modeled as a linear combination of coefficients corresponding to contrasts of experimental conditions. Hypothesis testing is then performed on these coefficients to assess whether the corresponding contrasts result in statistically significant differential expression for a given gene. In the remainder of this section, we briefly outline the key features of this modeling framework, as described in @love2014moderated.

Let $c_{ij}$ denote the observed raw count for gene $i$ in sample $j$. We assume that $c_{ij}$ has a NB distribution with mean $\mu_{ij}$ and gene-specific dispersion parameter $\alpha_i$; that is, $c_{ij} \sim \mathcal{NB}(\mu_{ij}, \alpha_i)$. The mean $\mu_{ij}$ is modelled as the product of a sample-specific size factor $s_j$ and a normalised expression level $q_{ij}$, such that $\mu_{ij} = s_j q_{ij}$. The size factor $s_j$ is estimated using the median-of-ratios method, as mentioned in @sec-norm. Finally, the dispersion parameter is used to model the variance of the counts via $\text{var}(c_{ij}) = \mu_{ij}+\alpha_i\mu_{ij}^2$.

The log-transformation of the normalised expression level, $q_{ij}$, is modelled in this study as

$$
\begin{aligned}
\text{log}(q_{ij}) &= \beta_{i0} + \beta_{i1}x^{(\text{FL})}_{j} + \beta_{i2}x^{(\text{YC})}_{j} + \beta_{i3}x^{(\text{YE})}_{j} + \beta_{i4}x^{(\text{YCE})}_{j} + \beta_{i5}x^{(\text{30})}_{j} + \\
& \quad \quad \beta_{i6}x^{(\text{FL})}_{j}x^{(\text{YC})}_{j} + \beta_{i7}x^{(\text{FL})}_{j}x^{(\text{YE})}_{j} + \beta_{i8}x^{(\text{FL})}_{j}x^{(\text{YCE})}_{j} + \beta_{i9}x^{(\text{FL})}_{j}x^{(\text{30})}_{j},
\end{aligned}
$$ {#eq-glm}

where the intercept term $\beta_{i0}$ denotes the baseline expression level of gene $i$ under the reference condition. The coefficients $\beta_{i1}$ to $\beta_{i5}$ represent the main effects of the experimental factors: $x^{(\text{FL})}_{j}$ is an indicator variable for the FLC1Δ strain, with the WT strain serving as the reference level; $x^{(\text{YC})}_{j}$, $x^{(\text{YE})}_{j}$, and $x^{(\text{YCE})}_{j}$ are indicators for the different media conditions, with Y as the reference level; and $x^{(\text{30})}_{j}$ indicates the 30°C temperature condition, with 37°C as reference. Together, this implies that the reference experimental condition is WT-37-Y. The interaction terms $\beta_{i6}$ to $\beta_{i9}$ model how the effects of media and temperature differ under the presence or absence of the FLC1 gene. No interaction between media and temperature was included, as these factors are not fully crossed in the experimental design.

Accurate estimation of gene-specific dispersion parameters ($\alpha_i$) is essential for reliable differential expression analysis. However, in experiments with small sample sizes—such as this one—maximum likelihood estimates (MLE) of dispersion can be highly variable and compromise significance testing [@love2014moderated]. To address this, `DESeq2` applies an empirical Bayes shrinkage approach that pulls dispersion estimates toward a trend based on mean expression. This trend is derived from gene-wise estimates and modelled using a parametric regression, with final dispersion values obtained as maximum a posteriori (MAP) estimates under a log-normal prior. In cases where the gene-wise estimate notably exceeds the trend, `DESeq2` retains the original estimate to avoid underestimating true variance and inflating false positives.

The log-fold change (LFC), typically expressed on a $\text{log}_2$ scale, represents the change in gene expression between two conditions and corresponds to the model coefficients in @eq-glm, estimated via MLE using the shrunken dispersion values. However, MLE-derived LFCs can be highly variable, especially for low-count genes. To improve their stability and interpretability, `DESeq2` applies an empirical Bayes shrinkage procedure introduced by @zhu2019heavy and implemented in the `apeglm` package. This approach uses a heavy-tailed Cauchy prior, with the prior scale adaptively estimated from the data, and produces MAP estimates that combine the negative binomial likelihood with the prior. Uncertainty is quantified using a Laplace approximation to the posterior. Although this shrinkage does not affect which genes are identified as significantly differentially expressed, it yields more reliable effect size estimates for downstream analyses such as visualisation, gene filtering, and functional enrichment [@meeta2021hbctraining].

In `DESeq2`, differential expression is assessed using a Wald test on the maximum likelihood estimates of log-fold changes (LFCs), testing the null hypothesis $H_0: \beta_{ik} = 0$ against the alternative $\beta_{ik} \neq 0$. Although a zero LFC may be biologically unlikely due to complex gene regulatory networks, it provides a practical baseline for statistical testing, especially in small-scale studies like ours with only three replicates per condition [@love2014moderated]. P-values are adjusted for multiple testing using the Benjamini–Hochberg procedure to control the false discovery rate (FDR) [@benjamini1995controlling]. Due to limited statistical power, we use an adjusted p-value threshold of 0.1 to determine significance.

As discussed in @sec-filter, `DESeq2` performs independent filtering by default, using the mean of normalised counts to exclude genes with low expression. The filtering threshold is automatically chosen to maximise discoveries at the target false discovery rate (FDR), set here at 0.1. This filter is independent of the test statistic under the null hypothesis, enhancing statistical power [@bourgon2010independent]. Additionally, `DESeq2` incorporates automatic outlier detection based on Cook’s distance, flagging observations exceeding the 99th percentile of the $F(q, q-n)$ distribution, where $q$ is the number of model parameters and $n$ the number of samples. Outlier handling depends on sample size: it is skipped for conditions with two or fewer replicates; genes with outliers are excluded when there are six or fewer replicates; and for seven or more replicates, outliers are replaced with imputed values via trimmed means before refitting the model.

The rlog transformation, introduced in @sec-norm, converts raw counts $c_{ij}$ for gene $i$ in sample $j$ to $\log_2(q_{ij}) = \beta_{i0} + \beta_{ik}$, fitting a model similar to @eq-glm and applying empirical Bayes shrinkage to the log-fold changes relative to baseline expression $\beta_{i0}$. By default, `DESeq2` uses blind dispersion estimation for rlog, ignoring experimental design and treating all samples as replicates of a single condition. This makes rlog-transformed data suitable for unsupervised analyses like quality control, minimizing experimental group effects. The VST transformation is also blinded by default.

Our downstream analysis focused on the four interaction terms $\beta_{i6}$ to $\beta_{i9}$ in @eq-glm to identify genes whose stress response is modulated by the presence or absence of the FLC1 gene, while also considering main effects. To assess model fit, we examined the dispersion plot, expecting gene-wise dispersions to scatter around the fitted mean-dependent trend, with dispersion decreasing as mean expression increases [@meeta2021hbctraining]. After multiple testing, the p-value distribution was inspected; a well-calibrated test should show a spike near zero and a flat distribution elsewhere [@psu2025stat]. We produced MA plots for both unshrunken and shrunken LFCs, highlighting significant and non-significant genes to visualise fold change magnitude and distribution across expression levels [@meeta2021hbctraining]. Volcano plots displayed the top 10 most significant genes by adjusted p-value.

We compared the significant gene sets for the interaction terms by assessing both the number of genes per interaction and their overlaps. To identify shared expression patterns, we selected the top 500 most variable genes across samples for all interactions and performed hierarchical clustering on the correlation matrix of z-scores derived from normalised counts. For this, rlog and VST transformations were applied without blinding, using the design matrix to estimate dispersions. The optimal cluster number was determined via the Gap statistic [@tibshirani2001estimating]. Cluster expression profiles were visualised through heatmaps and line plots to illustrate expression trends across experimental conditions.

## Software

All analyses were performed using R version 4.4.1. Differential expression analysis was conducted with the `DESeq2` package, version 1.46.0. The complete code for reproducing the analysis and generating this report is available at [https://github.com/dievillano/gene-expression](https://github.com/dievillano/gene-expression).

